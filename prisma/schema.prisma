// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String  @id @default(cuid())
  email String  @unique
  name  String?
  bookings   Booking[]

  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  barbershop Barbershop[]

  @@map("users")
}

model Barbershop {
  id        String   @id @default(cuid())
  name      String
  address   String
  phone     String
  imageUrl     String
  services  Service[]

  user      User     @relation(fields: [userId], references: [id])
  userId    String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("barbershops")
}

model Service {
  id        String   @id @default(cuid())
  name      String
  price     Decimal @db.Decimal(10, 2)
  duration  Int
  bookings   Booking[]

  barbershopId String
  barbershop   Barbershop @relation(fields: [barbershopId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("services")
}

model Booking {
  id        String   @id @default(cuid())
  date      DateTime
  userId    String
  serviceId String
  status    String

  user      User     @relation(fields: [userId], references: [id])
  service   Service  @relation(fields: [serviceId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("bookings")
}
